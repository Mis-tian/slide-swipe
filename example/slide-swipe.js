(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _srcIndexJs = __webpack_require__(2);\n\nvar _srcIndexJs2 = _interopRequireDefault(_srcIndexJs);\n\n/**\n * 测试普通横向滑动模块\n */\nvar Node = document.getElementById('horizontal-no-ball');\nvar NodeInstance = new _srcIndexJs2['default'](Node);\n\n/**\n * 测试横向滑动模块\n */\nvar Node1 = document.getElementById('vertical');\nvar Node1Options = {\n    direction: 'vertical', //滑动方向\n    loop: true, //是否滑动循环\n    indicator: { //提示框\n        indicatorContainerId: 'vertical-indicator', //提示框的容器id\n        activeCssName: 'indicator-active' //激活图片对应的class名字\n    }\n};\nvar verticalInstance = new _srcIndexJs2['default'](Node1, Node1Options);\n\n/**\n * 测试竖向滑动模块\n */\nvar Node2 = document.getElementById('horizontal');\nvar Node2Options = {\n    direction: 'horizontal', //滑动方向\n    loop: false, //是否滑动循环\n    indicator: { //提示框\n        indicatorContainerId: 'horizontal-indicator', //提示框的容器id\n        activeCssName: 'indicator-active' //激活图片对应的class名字\n    }\n};\nvar horizontalInstance = new _srcIndexJs2['default'](Node2, Node2Options);\n/**\n * 测试自动播放方式\n */\nvar autoNode = document.getElementById('auto-play');\nvar autoNodeOptions = {\n    autoPlay: true, //是否自动播放\n    duration: 1500, //自动播放时间间隔\n    loop: true,\n    indicator: { //提示框\n        indicatorContainerId: 'auto-indicator', //提示框的容器id\n        activeCssName: 'indicator-active' //激活图片对应的class名字\n    }\n};\nvar autoInstance = new _srcIndexJs2['default'](autoNode, autoNodeOptions);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/src/index.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./example/src/index.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n * 主程序入口\n */\n\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _SliderJs = __webpack_require__(3);\n\nvar _SliderJs2 = _interopRequireDefault(_SliderJs);\n\nvar _GestureEventJs = __webpack_require__(5);\n\nvar _GestureEventJs2 = _interopRequireDefault(_GestureEventJs);\n\nif (window['phoenix-ui']) {\n    window['phoenix-ui']['Slider'];\n} else {\n    window['Slider'] = _SliderJs2['default'];\n};\n_SliderJs2['default'].GestureEvent = _GestureEventJs2['default'];\nmodule.exports = _SliderJs2['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/index.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n * Slider为GestureEvent的具体使用实例\n * 用户可以自行根据GestureEvent扩展自己对应手势的回调函数\n */\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _utilsWarningJs = __webpack_require__(4);\n\nvar _utilsWarningJs2 = _interopRequireDefault(_utilsWarningJs);\n\nvar _GestureEventJs = __webpack_require__(5);\n\nvar _GestureEventJs2 = _interopRequireDefault(_GestureEventJs);\n\nvar Slider = (function (_GestureEvent) {\n    _inherits(Slider, _GestureEvent);\n\n    _createClass(Slider, null, [{\n        key: 'defaultOptions',\n\n        /**\n         * slider参数配置\n         * @type {{direction: string, loop: string, swipeGap: number, swipeLength: number}}\n         */\n        value: {\n            direction: 'horizontal', //默认横向滚动\n            autoPlay: false, //默认不自滚动\n            loop: false, //默认不循环\n            swipeGap: 0, //每次滑动的距离\n            swipeLength: 0, //子元素个数\n            indicator: null //slider下面的小圆点对象\n        },\n\n        /**\n         * 初始化参数配置\n         * @param ele 滑动元素container\n         * @param option 组件参数\n         */\n        enumerable: true\n    }]);\n\n    function Slider(ele, option) {\n        _classCallCheck(this, Slider);\n\n        if (!(ele && ele.children && ele.children.length)) {\n            _utilsWarningJs2['default'](\"please use the parentNode of image list as 1st parameter for Slider\");\n            return;\n        }\n        var options = Object.assign({}, Slider.defaultOptions, option);\n        _GestureEvent.call(this, ele, options);\n        var that = this;\n        /**\n         * 配置信息\n         */\n        this.options = options;\n        /**\n         * 如果用户决定自定义手势事件，则覆盖预先定义好的\n         */\n        if (!options.bindEvents) {\n            this.bindDefinedEvents();\n        } else {\n            for (var key in options.bindEvents) {\n                this.on(key, options.bindEvents[key]);\n            }\n        }\n        /**\n         * 自动循环播放\n         */\n        if (options.autoPlay) {\n            setInterval(function () {\n                that.trigger('swipeLeft');\n            }, options.duration || 1000);\n        }\n        /**\n         * currentIndex:当前数据\n         * swipeLastIndex:swipe子元素的最后序数号\n         * swipeGap: 每次滑动的距离\n         */\n        this.animationInfo = {\n            currentIndex: 0,\n            swipeLastIndex: ele.children.length - 1, //最后子元素的序数号\n            swipeGap: options['swipeGap'] || (this.options.direction == 'horizontal' ? ele['offsetWidth'] : ele['offsetHeight']) / ele.children.length };\n    }\n\n    //每次滑动宽度/每次滑动高度\n\n    Slider.prototype.bindDefinedEvents = function bindDefinedEvents() {\n        var that = this;\n        var SwipeArr = this.options.direction == 'horizontal' ? ['swipeLeft', 'swipeRight'] : ['swipeUp', 'swipeDown'];\n        /**\n         * 挂载事件\n         * 先支持swipe事件，别的longTap之类的之后封装\n         */\n        SwipeArr.forEach(function (eventName) {\n            that.on(eventName, that[eventName]);\n        });\n    };\n\n    Slider.prototype.renderIndicator = function renderIndicator(currentIndex) {\n        //如果用户定义了indicator,则执行indicator的逻辑\n        var _options$indicator = this.options['indicator'];\n        var indicatorContainerId = _options$indicator.indicatorContainerId;\n        var activeCssName = _options$indicator.activeCssName;\n\n        if (!(indicatorContainerId && activeCssName)) {\n            _utilsWarningJs2['default']('if you want to render indicator, you must assign value to \"indicatorContainerId\"' + 'and \"activeCssName\" ');\n        } else {\n            var indicatorNode = document.getElementById(indicatorContainerId);\n            var children = indicatorNode.children;\n            for (var i = 0; i < children.length; i++) {\n                children[i]['classList'].remove(activeCssName);\n            }\n            children[currentIndex]['classList'].add(activeCssName);\n        }\n    };\n\n    Slider.prototype.renderStyle = function renderStyle(info) {\n        var translateFormat = this.options.direction == 'horizontal' ? 'translate3d(x,0,0)' : 'translate3d(0,y,0)';\n        var replaceString = this.options.direction == 'horizontal' ? 'x' : 'y';\n        var currentIndex = info.currentIndex;\n        var swipeGap = info.swipeGap;\n\n        //在渲染样式的时机，渲染下面的导航\n        if (this.options['indicator']) {\n            this.renderIndicator(currentIndex);\n        }\n        return translateFormat.replace(replaceString, \"-\" + currentIndex * swipeGap + 'px');\n    };\n\n    /**\n     * 按住时间长达1000ms，并且位移小于5,触发触发长按事件\n     */\n\n    Slider.prototype.longTap = function longTap() {\n        alert('longTapping');\n    };\n\n    /**\n     * swipe系列手指移动超过预设值\n     * 手指移动事件小于1500ms\n     * 手指滑动至少5个单位\n     */\n    /**\n     * {\"moveName\":\"Left\",\"moveTime\":162,\n     * \"positionInfo\":{\"x\":\"Left\",\"y\":\"Down\"},\n     * \"direction\":\"x\",\"moveX\":20.96600341796875,\"moveY\":0,\n     * \"startX\":198.48300170898438,\"startY\":64.2969970703125,\n     * \"lastX\":177.51699829101562,\"lastY\":64.2969970703125}\n     * @param e\n     * @param info\n     */\n\n    Slider.prototype.swipeRight = function swipeRight() {\n        if (this.animationInfo.currentIndex > 0) {\n            this.animationInfo.currentIndex--;\n            /**\n             * 如果有循环参数，则在头部左移回归尾部\n             */\n        } else if (this.options.loop) {\n                this.animationInfo.currentIndex = this.animationInfo['swipeLastIndex'];\n            }\n        this.ele.style[\"-webkit-transform\"] = this.renderStyle(this.animationInfo);\n    };\n\n    Slider.prototype.swipeLeft = function swipeLeft() {\n        if (this.animationInfo.currentIndex < this.animationInfo['swipeLastIndex']) {\n            this.animationInfo.currentIndex++;\n        } else if (this.options.loop) {\n            this.animationInfo.currentIndex = 0;\n        }\n        this.ele.style[\"-webkit-transform\"] = this.renderStyle(this.animationInfo);\n    };\n\n    Slider.prototype.swipeUp = function swipeUp(e, info) {\n        this['swipeLeft'](e, info);\n    };\n\n    Slider.prototype.swipeDown = function swipeDown(e, info) {\n        this['swipeRight'](e, info);\n    };\n\n    /**\n     * 恢复原状\n     */\n\n    Slider.prototype.swipeNotMove = function swipeNotMove() {\n        alert('swipeNotMove');\n    };\n\n    /**\n     * 快速点击事件\n     * 按住时间小于150ms，并且位移小于5\n     */\n\n    Slider.prototype.fastTap = function fastTap() {\n        this.warningForTap();\n        alert(1);\n    };\n\n    /**\n     * 双击事件与fastTap不兼容\n     * 两次点击事件间隔小于400ms，触发双击事件\n     */\n\n    Slider.prototype.dbTap = function dbTap() {\n        this.warningForTap();\n    };\n\n    /**\n     * 不能同时处理快速点击和双击\n     */\n\n    Slider.prototype.warningForTap = function warningForTap() {\n        if (this.eventList['dbTap'] && this.eventList['fastTap']) {\n            _utilsWarningJs2['default']('you can\\'t add event \"dbTap\" and \"fastTap\" at the same time,if you really want to,\\n                    please use click instead of fastTap');\n        }\n    };\n\n    return Slider;\n})(_GestureEventJs2['default']);\n\nexports['default'] = Slider;\nmodule.exports = exports['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Slider.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/Slider.js?");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n * 警告报错处理\n */\n'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (message) {\n    if (typeof console !== 'undefined') {\n        console.error(message);\n    }\n    try {\n        throw new Error(message);\n    } catch (x) {}\n};\n\nmodule.exports = exports['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/warning.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/utils/warning.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n * 移动端手势系统入口\n */\n/**\n * 引入父类\n */\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _EventProtoJs = __webpack_require__(6);\n\nvar _EventProtoJs2 = _interopRequireDefault(_EventProtoJs);\n\n/**\n * 引入工具类\n */\n\nvar _utilsUtilsJs = __webpack_require__(7);\n\nvar _utilsUtilsJs2 = _interopRequireDefault(_utilsUtilsJs);\n\nvar _utilsWarningJs = __webpack_require__(4);\n\nvar _utilsWarningJs2 = _interopRequireDefault(_utilsWarningJs);\n\nvar GestureEvent = (function (_EventProto) {\n    _inherits(GestureEvent, _EventProto);\n\n    function GestureEvent(ele, options) {\n        _classCallCheck(this, GestureEvent);\n\n        _EventProto.call(this, ele, options); //获取父类实例的eventList\n        /**\n         * 绑定实例dom节点和配置信息\n         */\n        this.ele = ele;\n        /**p\n         * 自定义配置属性\n         * @type {number}\n         */\n        this.defaultOptions = {\n            triggerDistance: 10 };\n        /**\n         * 绑定事件【目前支持如下事件列表】\n         *'swipeLeft',\n         *'swipeRight',\n         *'swipeUp',\n         *'swipeDown',\n         *'swipeNotMove',\n         *'fastTap',\n         *'dbTap',\n         *'longTap'\n         */\n        //至少手指移动10px\n        this.bindEvents();\n        document.addEventListener('touchmove', function () {});\n    }\n\n    GestureEvent.prototype.bind = function bind(type, func) {\n        this.ele.addEventListener(type, func, false);\n    };\n\n    GestureEvent.prototype.unbind = function unbind(type, func) {\n        this.ele.removeEventListener(type, func);\n    };\n\n    /**\n     * 设置滑动最后的信息\n     * @param e\n     */\n\n    GestureEvent.prototype.setSliderLastInfo = function setSliderLastInfo(e) {\n        this.lastX = _utilsUtilsJs2['default'].isMobile() ? e.touches[0].pageX : e.clientX;\n        this.lastY = _utilsUtilsJs2['default'].isMobile() ? e.touches[0].pageY : e.clientY;\n    };\n\n    /**\n     * 设置滑动初始化的信息\n     * @param e\n     */\n\n    GestureEvent.prototype.setStartInfo = function setStartInfo(e) {\n        this.startX = _utilsUtilsJs2['default'].isMobile() ? e.touches[0].pageX : e.clientX;\n        this.startY = _utilsUtilsJs2['default'].isMobile() ? e.touches[0].pageY : e.clientY;\n        this.startTime = Date.now();\n    };\n\n    GestureEvent.prototype.getSliderInfo = function getSliderInfo() {\n        var absX = Math.abs(this.lastX - this.startX);\n        var absY = Math.abs(this.lastY - this.startY);\n        var moveTime = Date.now() - this.startTime;\n        var direction = absX > absY ? \"x\" : \"y\";\n        var positionInfo = {\n            x: this.lastX - this.startX >= 0 ? 'Right' : 'Left',\n            y: this.lastY - this.startY >= 0 ? 'Down' : 'Up'\n        };\n        return {\n            moveName: positionInfo[direction],\n            moveTime: moveTime,\n            positionInfo: positionInfo,\n            direction: direction,\n            moveX: absX,\n            moveY: absY,\n            startX: this.startX,\n            startY: this.startY,\n            lastX: this.lastX,\n            lastY: this.lastY\n        };\n    };\n\n    GestureEvent.prototype._touchStart = function _touchStart(e) {\n        //阻止默认滚动行为\n        e.preventDefault();\n        //这里只允许单指操作，不会影响鼠标操作\n        if (e.touches && e.touches.length > 1) {\n            return false;\n        }\n        this.setStartInfo(e);\n        this.setSliderLastInfo(e);\n    };\n\n    GestureEvent.prototype._touchMove = function _touchMove(e) {\n        //阻止默认滚动行为\n        e.preventDefault();\n        this.setSliderLastInfo(e);\n        var getSliderInfo = this.getSliderInfo();\n        //@TODO 是否触发swipeMove有待商榷\n        this.trigger('swipeMove', [e.target, getSliderInfo]);\n    };\n\n    GestureEvent.prototype._touchEnd = function _touchEnd(e) {\n        //阻止默认滚动行为\n        e.preventDefault();\n        //debugger;\n        //移除dom滚动事件\n        //this.stopDocMove(false);\n        /**\n         * 手指信息\n         * @type {{moveTime, positionInfo, direction, moveX, moveY, startX, startY, lastX, lastY}|*}\n         */\n        var SliderInfo = this.getSliderInfo();\n        var distance = this.defaultOptions.triggerDistance;\n        var triggerCondition = {\n            /**\n             * 触发快速点击事件\n             */\n            'fastTap': SliderInfo.moveTime < 100 && SliderInfo.moveX < 5 && SliderInfo.moveY < 5,\n            /**\n             * x轴和y轴有一个方向滑动距离够===>>>>触发swipe事件\n             */\n            'swipe': SliderInfo.moveTime > 100 && SliderInfo.moveTime < 1500 && (SliderInfo['moveX'] > distance || SliderInfo['moveY'] > distance),\n            /**\n             * 长按和手指不移动，触发longTap事件\n             */\n            \"longTap\": SliderInfo.moveTime > 1500 && SliderInfo.moveX < 5 && SliderInfo.moveY < 5\n        };\n        /**\n         * 事件信息\n         */\n        if (triggerCondition['fastTap']) {\n            this.trigger('fastTap', [SliderInfo, e.target]);\n        } else if (triggerCondition['longTap']) {\n            this.trigger('longTap');\n        } else if (triggerCondition['swipe']) {\n            var eventTypeName = SliderInfo['moveName'];\n            //触发swipeLeft,swipeRight,swipeUp,swipeDown\n            this.trigger('swipe' + eventTypeName, [e.target, SliderInfo]);\n        } else {\n            /**\n             * 什么条件都不满足,触发复原事件\n             */\n            this.trigger('swipeNotMove', [e.target, SliderInfo]);\n        }\n        //回滚实例数据\n        this.startX = this.startY = this.lastX = this.lastY = 0;\n    };\n\n    /**\n     * 挂载事件\n     */\n\n    GestureEvent.prototype.bindEvents = function bindEvents() {\n        var that = this;\n        var touchEvents = {\n            'touchstart': {\n                callback: that._touchStart.bind(that)\n            },\n            'touchmove': {\n                callback: that._touchMove.bind(that)\n            },\n            'touchend': {\n                callback: that._touchEnd.bind(that)\n            }\n        };\n        /**\n         * 在mouse事件中取消mousemove单独事件，放在mousedown和mouseup里面\n         * @type {{mousedown: {callback: Function}, mouseup: {callback: Function}}}\n         */\n        var mouseEvents = {\n            'mousedown': {\n                callback: function callback(e) {\n                    that._touchStart(e);\n                    that.bind('mousemove', that._touchMove.bind(that));\n                }\n            },\n            'mouseup': {\n                callback: function callback(e) {\n                    that._touchEnd(e);\n                    that.unbind('mousemove', that._touchMove.bind(that));\n                }\n            }\n        };\n        var finalEvents = _utilsUtilsJs2['default'].isMobile() ? touchEvents : mouseEvents;\n        for (var key in finalEvents) {\n            this.bind(key, finalEvents[key].callback);\n        }\n    };\n\n    return GestureEvent;\n})(_EventProtoJs2['default']);\n\nexports['default'] = GestureEvent;\nmodule.exports = exports['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GestureEvent.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/GestureEvent.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n * 手势管理系统基类\n * 请查看单元测试EventProto.js\n */\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsWarningJs = __webpack_require__(4);\n\nvar _utilsWarningJs2 = _interopRequireDefault(_utilsWarningJs);\n\nvar EventProto = (function () {\n    function EventProto() {\n        _classCallCheck(this, EventProto);\n\n        /**\n         * 实例事件存储字典\n         * @type {{}}\n         */\n        this.eventList = {};\n    }\n\n    /**\n     * 注册事件类型单例\n     * @param type 事件类型\n     * @param func 回调函数\n     */\n\n    EventProto.prototype.on = function on(type, func) {\n        if (typeof func != 'function') {\n            _utilsWarningJs2['default']('you should pass a function as \"on\" parameter ');\n        } else {\n            if (!!this.eventList[type]) {\n                this.eventList[type].push(func);\n            } else {\n                this.eventList[type] = [func];\n            }\n        }\n    };\n\n    EventProto.prototype.off = function off(type, func) {\n        var typeList = this.eventList[type];\n        if (!!typeList) {\n            var targetIndex = typeList.indexOf(func);\n            typeList.splice(targetIndex, 1);\n        } else {\n            _utilsWarningJs2['default']('you haven\\'t initialized event : ' + type + ',please use \"on\" to initialize your event ');\n        }\n    };\n\n    /**\n     * 触发事件\n     * @param type 事件类型\n     * @param args 回调函数参数数组\n     */\n\n    EventProto.prototype.trigger = function trigger(type, args) {\n        var typeList = this.eventList[type];\n        /**\n         * trigger没有对应的回调函数，则默认不做任何事\n         */\n        if (!!typeList) {\n            for (var i = 0; i < typeList.length; i++) {\n                typeList[i].apply(this, args);\n            }\n        }\n    };\n\n    return EventProto;\n})();\n\nexports['default'] = EventProto;\nmodule.exports = exports['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/EventProto.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/EventProto.js?");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("/**\n * Created by slashhuang on 16/5/22.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar utils = {\n  isMobile: function isMobile() {\n    /**\n     * 使用TouchEvent来实验是否为移动端\n     */\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n};\nexports[\"default\"] = utils;\nmodule.exports = exports[\"default\"];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/utils.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/utils/utils.js?");

/***/ }
/******/ ])
});
;